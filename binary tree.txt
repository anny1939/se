#include <iostream>
using namespace std;

class node{
  public:
  int data;
  node* left;
  node* right;

  node(int d){
    this -> data = d;
    this -> left = NULL;
    this -> right = NULL;
  }
};

node* buildtree(node* root){
  cout<<"Enter the data: "<<endl;
  int data;
  cin>>data;
  root = new node(data);

  if (data == -1){
    return NULL;
  }

  cout<<"Enter the data for inserting in left of "<<data<<endl;
  root->left = buildtree(root->left);
  cout<<"Enter the data for insertinng in right of "<<data<<endl;
  root->right = buildtree(root->right);
  return root;
}

void inorder(node* root){
  //base case
  if(root == NULL){
    return;
  }
  inorder(root->left);
  cout<<root->data<<" ";
  inorder(root->right);
  
}

void preorder(node* root){
  //base case
  if(root == NULL){
    return;
  }
  cout<<root->data<<" ";
  preorder(root->left);
  preorder(root->right);
}

void postorder(node* root){
  //base case
  if (root == NULL){
    return;
  }
  postorder(root->left);
  postorder(root->right);
  cout<<root->data<<" ";
}

//1 3 7 -1 -1 11 -1 -1 5 17 -1 -1 -1
int main() {
  node* root = NULL;

  root = buildtree(root);

  cout<<"inorder traversal is: ";
  inorder(root);
  cout<<endl;

  cout<<"preorder traversal is: ";
  preorder(root);
  cout<<endl;

  cout<<"postorder traversal is: ";
  postorder(root);
  

  


}